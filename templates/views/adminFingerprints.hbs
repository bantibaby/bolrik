<!DOCTYPE html>
<html lang="en">
<head>
    {{>headlinks}}
    <title>Admin - Device Fingerprints</title>
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f5f7fa;
            margin: 0;
            padding: 0;
        }
        
        .container {
            max-width: 1300px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #e1e5eb;
        }
        
        .page-title {
            font-size: 24px;
            font-weight: 600;
            color: #3a3a3a;
            margin: 0;
        }
        
        .card {
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.05);
            margin-bottom: 30px;
            overflow: hidden;
        }
        
        .card-header {
            background-color: #fff;
            padding: 20px 25px;
            border-bottom: 1px solid #edf2f9;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .card-header h2 {
            font-size: 18px;
            font-weight: 600;
            color: #3a3a3a;
            margin: 0;
        }
        
        .card-body {
            padding: 0;
        }
        
        .card-footer {
            background-color: #f9fafc;
            padding: 15px 25px;
            border-top: 1px solid #edf2f9;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .table-container {
            overflow-x: auto;
            width: 100%;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
        }
        
        th {
            background-color: #f9fafc;
            color: #5e6e82;
            font-weight: 600;
            padding: 15px;
            text-align: left;
            border-bottom: 2px solid #edf2f9;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #edf2f9;
            color: #5e6e82;
            font-size: 14px;
        }
        
        tr:hover {
            background-color: #f9fafc;
        }
        
        .badge {
            display: inline-block;
            padding: 5px 12px;
            border-radius: 50px;
            font-size: 12px;
            font-weight: 600;
            margin-right: 5px;
            margin-bottom: 5px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }
        
        .badge-primary {
            background-color: #4e73df;
            color: white;
        }
        
        .badge-warning {
            background-color: #f6c23e;
            color: #212529;
        }
        
        .badge-danger {
            background-color: #e74a3b;
            color: white;
        }
        
        .badge-success {
            background-color: #1cc88a;
            color: white;
        }
        
        .badge-secondary {
            background-color: #858796;
            color: white;
        }
        
        .badge-info {
            background-color: #36b9cc;
            color: white;
        }
        
        .user-list {
            margin-top: 5px;
        }
        
        .user-item {
            padding: 8px 0;
            border-bottom: 1px dashed #edf2f9;
        }
        
        .user-item:last-child {
            border-bottom: none;
        }
        
        .btn {
            display: inline-block;
            font-weight: 600;
            text-align: center;
            white-space: nowrap;
            vertical-align: middle;
            user-select: none;
            border: 1px solid transparent;
            padding: 0.375rem 0.75rem;
            font-size: 14px;
            line-height: 1.5;
            border-radius: 0.35rem;
            transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
            cursor: pointer;
        }
        
        .btn-primary {
            color: #fff;
            background-color: #4e73df;
            border-color: #4e73df;
        }
        
        .btn-primary:hover {
            background-color: #2e59d9;
            border-color: #2653d4;
        }
        
        .btn-secondary {
            color: #fff;
            background-color: #858796;
            border-color: #858796;
        }
        
        .btn-secondary:hover {
            background-color: #717384;
            border-color: #6b6d7d;
        }
        
        .btn-danger {
            color: #fff;
            background-color: #e74a3b;
            border-color: #e74a3b;
        }
        
        .btn-danger:hover {
            background-color: #e02d1b;
            border-color: #d52a1a;
        }
        
        .filter-container {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }
        
        .search-box {
            flex: 1;
            min-width: 250px;
            padding: 10px 15px;
            border: 1px solid #e1e5eb;
            border-radius: 5px;
            font-size: 14px;
        }
        
        .filter-select {
            padding: 10px 15px;
            border: 1px solid #e1e5eb;
            border-radius: 5px;
            font-size: 14px;
            min-width: 200px;
        }
        
        .text-center {
            text-align: center;
        }
        
        .loading-spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-top-color: #4e73df;
            animation: spin 1s ease-in-out infinite;
            margin-right: 10px;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        .nav-buttons {
            display: flex;
            gap: 10px;
        }
        
        .fingerprint-id {
            font-family: monospace;
            background-color: #f0f2f5;
            padding: 3px 6px;
            border-radius: 4px;
            cursor: pointer;
        }
        
        .timestamp {
            white-space: nowrap;
        }
        
        @media (max-width: 768px) {
            .card-header {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .card-header h2 {
                margin-bottom: 10px;
            }
            
            th, td {
                padding: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="page-header">
            <h1 class="page-title">Device Fingerprints</h1>
            <div class="nav-buttons">
                <a href="/admin/dashboard" class="btn btn-secondary">Dashboard</a>
                <a href="/admin/ip-addresses" class="btn btn-secondary">IP Monitoring</a>
            </div>
        </div>
        
        <div class="card">
            <div class="card-header">
                <h2>Fingerprint Records</h2>
                <div>
                    <button id="refreshBtn" class="btn btn-primary">
                        <span id="loading-spinner" class="loading-spinner" style="display: none;"></span>
                        Refresh Data
                    </button>
                </div>
            </div>
            
            <div class="filter-container" style="padding: 0 25px;">
                <input type="text" id="searchInput" class="search-box" placeholder="Search fingerprints...">
                <select id="filterSelect" class="filter-select">
                    <option value="all">All Fingerprints</option>
                    <option value="multiple">Multiple Users</option>
                    <option value="single">Single User</option>
                    <option value="none">No Users</option>
                </select>
            </div>
            
            <div class="card-body">
                <div class="table-container">
                    <table id="fingerprintsTable">
                        <thead>
                            <tr>
                                <th>Fingerprint ID</th>
                                <th>Users</th>
                                <th>IP Addresses</th>
                                <th>User Agents</th>
                                <th>Last Updated</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody id="fingerprintsBody">
                            <tr>
                                <td colspan="6" class="text-center">
                                    <span class="loading-spinner"></span> Loading data...
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            
            <div class="card-footer">
                <div id="totalCount">Total: 0 fingerprints</div>
            </div>
        </div>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            loadFingerprints();
            
            document.getElementById('refreshBtn').addEventListener('click', loadFingerprints);
            document.getElementById('searchInput').addEventListener('input', filterTable);
            document.getElementById('filterSelect').addEventListener('change', filterTable);
        });
        
        function loadFingerprints() {
            // Show loading spinner
            document.getElementById('loading-spinner').style.display = 'inline-block';
            document.getElementById('refreshBtn').disabled = true;
            
            fetch('/admin/device-fingerprints')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        displayFingerprints(data.fingerprints);
                        document.getElementById('totalCount').textContent = `Total: ${data.fingerprints.length} fingerprints`;
                    } else {
                        alert('Error loading fingerprints: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to load fingerprints. Please try again.');
                })
                .finally(() => {
                    // Hide loading spinner
                    document.getElementById('loading-spinner').style.display = 'none';
                    document.getElementById('refreshBtn').disabled = false;
                });
        }
        
        function displayFingerprints(fingerprints) {
            const tbody = document.getElementById('fingerprintsBody');
            tbody.innerHTML = '';
            
            if (fingerprints.length === 0) {
                tbody.innerHTML = '<tr><td colspan="6" class="text-center">No fingerprints found</td></tr>';
                return;
            }
            
            fingerprints.forEach(fp => {
                const row = document.createElement('tr');
                row.dataset.fingerprint = fp.fingerprint;
                row.dataset.userCount = fp.userIds ? fp.userIds.length : 0;
                
                // Fingerprint ID
                const idCell = document.createElement('td');
                const idSpan = document.createElement('span');
                idSpan.className = 'fingerprint-id';
                idSpan.textContent = fp.fingerprint.substring(0, 8) + '...';
                idSpan.title = fp.fingerprint;
                idSpan.onclick = () => {
                    navigator.clipboard.writeText(fp.fingerprint);
                    alert('Fingerprint copied to clipboard!');
                };
                idCell.appendChild(idSpan);
                row.appendChild(idCell);
                
                // Users
                const usersCell = document.createElement('td');
                const usersList = document.createElement('div');
                usersList.className = 'user-list';
                
                if (fp.userIds && fp.userIds.length > 0) {
                    fp.userIds.forEach(user => {
                        if (user) {
                            const userItem = document.createElement('div');
                            userItem.className = 'user-item';
                            userItem.innerHTML = `<strong>${user.fullname || 'Unknown'}</strong> (${user.mobile || 'No mobile'})`;
                            usersList.appendChild(userItem);
                        }
                    });
                } else {
                    usersList.textContent = 'No users';
                }
                
                usersCell.appendChild(usersList);
                row.appendChild(usersCell);
                
                // IP Addresses
                const ipCell = document.createElement('td');
                if (fp.ipAddresses && fp.ipAddresses.length > 0) {
                    fp.ipAddresses.forEach(ip => {
                        const badge = document.createElement('span');
                        badge.className = 'badge badge-primary';
                        badge.textContent = ip;
                        ipCell.appendChild(badge);
                    });
                } else {
                    ipCell.textContent = 'No IPs recorded';
                }
                row.appendChild(ipCell);
                
                // User Agents
                const uaCell = document.createElement('td');
                if (fp.userAgents && fp.userAgents.length > 0) {
                    const firstUA = fp.userAgents[0];
                    const uaBadge = document.createElement('span');
                    uaBadge.className = 'badge badge-info';
                    uaBadge.textContent = firstUA.substring(0, 20) + '...';
                    uaBadge.title = firstUA;
                    uaCell.appendChild(uaBadge);
                    
                    if (fp.userAgents.length > 1) {
                        const countBadge = document.createElement('span');
                        countBadge.className = 'badge badge-secondary';
                        countBadge.textContent = `+${fp.userAgents.length - 1} more`;
                        uaCell.appendChild(countBadge);
                    }
                } else {
                    uaCell.textContent = 'No user agents';
                }
                row.appendChild(uaCell);
                
                // Last Updated
                const updatedCell = document.createElement('td');
                updatedCell.className = 'timestamp';
                updatedCell.textContent = new Date(fp.updatedAt).toLocaleString();
                row.appendChild(updatedCell);
                
                // Status
                const statusCell = document.createElement('td');
                const statusBadge = document.createElement('span');
                
                if (fp.userIds && fp.userIds.length > 1) {
                    statusBadge.className = 'badge badge-danger';
                    statusBadge.textContent = 'Multiple Users';
                } else if (fp.userIds && fp.userIds.length === 1) {
                    statusBadge.className = 'badge badge-success';
                    statusBadge.textContent = 'Single User';
                } else {
                    statusBadge.className = 'badge badge-secondary';
                    statusBadge.textContent = 'No Users';
                }
                
                statusCell.appendChild(statusBadge);
                row.appendChild(statusCell);
                
                tbody.appendChild(row);
            });
        }
        
        function filterTable() {
            const searchValue = document.getElementById('searchInput').value.toLowerCase();
            const filterValue = document.getElementById('filterSelect').value;
            const rows = document.querySelectorAll('#fingerprintsBody tr');
            
            let visibleCount = 0;
            
            rows.forEach(row => {
                const fingerprint = row.dataset.fingerprint ? row.dataset.fingerprint.toLowerCase() : '';
                const userCount = parseInt(row.dataset.userCount || '0');
                
                let showRow = fingerprint.includes(searchValue);
                
                if (filterValue === 'multiple' && userCount <= 1) {
                    showRow = false;
                } else if (filterValue === 'single' && userCount !== 1) {
                    showRow = false;
                } else if (filterValue === 'none' && userCount !== 0) {
                    showRow = false;
                }
                
                row.style.display = showRow ? '' : 'none';
                
                if (showRow) {
                    visibleCount++;
                }
            });
            
            document.getElementById('totalCount').textContent = `Showing: ${visibleCount} fingerprints`;
        }
    </script>
</body>
</html> 